services:
  db:
    image: postgis/postgis
    restart: always
    user: postgres
    environment:
      POSTGRES_PASSWORD: admin1234
    volumes:
      - postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 5s
      timeout: 5s
      retries: 10
  backend:
    build: ../back
    env_file:
      - ./.env
    volumes:
      - ./src:/app/src
    ports:
      - 5000:5000
    command: npm run dev
    healthcheck:
      test: 'curl --fail --request POST --header ''content-type: application/json'' --url ''http://localhost:5000/'' --data ''{"query":"query { __typename }"}'' || exit 1'
      interval: 5s
      timeout: 5s
      retries: 10
    depends_on:
      db:
        condition: service_healthy
  frontend:
    build: ../front
    env_file:
      - ../front/.env
    volumes:
      - ../front/src:/app/src
    ports:
      - 3000:3000
    depends_on:
      backend:
        condition: service_healthy
      # images:
      #   condition: service_healthy
  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
  images:
    env_file:
      - ../images-upload-service/.env
    build: ../images-upload-service
    volumes:
      - ../images-upload-service/src:/app/src
      - ../images-upload-service/uploads:/app/uploads
    ports:
      - 18000:18000
    # healthcheck:
    #   test: "curl --fail --request GET --url 'http://localhost:18000/images' || exit 1"
    #   interval: 5s
    #   timeout: 5s
    #   retries: 10
volumes:
  postgres: